# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.baseline

# Run progress: 0,00% complete, ETA 02:55:00
# Fork: 1 of 5
# Warmup Iteration   1: 3741429639,537 ops/s
# Warmup Iteration   2: 3743635818,918 ops/s
# Warmup Iteration   3: 3708683827,230 ops/s
# Warmup Iteration   4: 3683418547,270 ops/s
# Warmup Iteration   5: 3700669953,149 ops/s
Iteration   1: 3671414962,372 ops/s
Iteration   2: 3668203399,462 ops/s
Iteration   3: 3695699418,562 ops/s
Iteration   4: 3657497817,025 ops/s
Iteration   5: 2729759474,714 ops/s

# Run progress: 0,95% complete, ETA 02:53:42
# Fork: 2 of 5
# Warmup Iteration   1: 3685353133,376 ops/s
# Warmup Iteration   2: 3652678109,992 ops/s
# Warmup Iteration   3: 3691214656,705 ops/s
# Warmup Iteration   4: 3677580030,065 ops/s
# Warmup Iteration   5: 3655979815,352 ops/s
Iteration   1: 3642978649,960 ops/s
Iteration   2: 3654290527,705 ops/s
Iteration   3: 3663023357,867 ops/s
Iteration   4: 3662450742,257 ops/s
Iteration   5: 3667918279,685 ops/s

# Run progress: 1,90% complete, ETA 02:52:02
# Fork: 3 of 5
# Warmup Iteration   1: 3656750120,770 ops/s
# Warmup Iteration   2: 3642687651,244 ops/s
# Warmup Iteration   3: 3626687851,110 ops/s
# Warmup Iteration   4: 2682938521,124 ops/s
# Warmup Iteration   5: 2623438445,961 ops/s
Iteration   1: 3620967949,064 ops/s
Iteration   2: 3644115953,898 ops/s
Iteration   3: 3656458832,309 ops/s
Iteration   4: 3642977020,784 ops/s
Iteration   5: 3638151262,909 ops/s

# Run progress: 2,86% complete, ETA 02:51:10
# Fork: 4 of 5
# Warmup Iteration   1: 3630387109,476 ops/s
# Warmup Iteration   2: 3620405612,228 ops/s
# Warmup Iteration   3: 3628647240,691 ops/s
# Warmup Iteration   4: 3638135107,565 ops/s
# Warmup Iteration   5: 3640956702,180 ops/s
Iteration   1: 3631880623,753 ops/s
Iteration   2: 3624346589,048 ops/s
Iteration   3: 3626730296,233 ops/s
Iteration   4: 3641598402,361 ops/s
Iteration   5: 3624518657,377 ops/s

# Run progress: 3,81% complete, ETA 02:49:17
# Fork: 5 of 5
# Warmup Iteration   1: 3638674597,428 ops/s
# Warmup Iteration   2: 3646192520,669 ops/s
# Warmup Iteration   3: 3632897011,365 ops/s
# Warmup Iteration   4: 3658130351,248 ops/s
# Warmup Iteration   5: 3619148455,389 ops/s
Iteration   1: 3635938598,006 ops/s
Iteration   2: 3633100375,788 ops/s
Iteration   3: 3656548121,104 ops/s
Iteration   4: 3637216484,185 ops/s
Iteration   5: 2733659630,256 ops/s


Result "org.sample.MyBenchmark.baseline":
  3574457817,067 ±(99.9%) 190460737,093 ops/s [Average]
  (min, avg, max) = (2729759474,714, 3574457817,067, 3695699418,562), stdev = 254259634,892
  CI (99.9%): [3383997079,974, 3764918554,161] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.javaUtilListOf10

# Run progress: 4,76% complete, ETA 02:47:30
# Fork: 1 of 5
# Warmup Iteration   1: 144986694,679 ops/s
# Warmup Iteration   2: 147138267,561 ops/s
# Warmup Iteration   3: 146535208,989 ops/s
# Warmup Iteration   4: 146409136,038 ops/s
# Warmup Iteration   5: 146539644,999 ops/s
Iteration   1: 146194484,000 ops/s
Iteration   2: 146416358,010 ops/s
Iteration   3: 146332705,221 ops/s
Iteration   4: 146408695,244 ops/s
Iteration   5: 146444342,039 ops/s

# Run progress: 5,71% complete, ETA 02:45:46
# Fork: 2 of 5
# Warmup Iteration   1: 144027094,599 ops/s
# Warmup Iteration   2: 146702533,908 ops/s
# Warmup Iteration   3: 145893760,758 ops/s
# Warmup Iteration   4: 146391223,134 ops/s
# Warmup Iteration   5: 146353286,932 ops/s
Iteration   1: 144948845,760 ops/s
Iteration   2: 143985711,815 ops/s
Iteration   3: 143683993,132 ops/s
Iteration   4: 145920852,880 ops/s
Iteration   5: 146185498,826 ops/s

# Run progress: 6,67% complete, ETA 02:44:02
# Fork: 3 of 5
# Warmup Iteration   1: 145687751,019 ops/s
# Warmup Iteration   2: 146449826,878 ops/s
# Warmup Iteration   3: 146526540,347 ops/s
# Warmup Iteration   4: 146235521,211 ops/s
# Warmup Iteration   5: 146038220,612 ops/s
Iteration   1: 146551009,590 ops/s
Iteration   2: 146425577,863 ops/s
Iteration   3: 146451101,411 ops/s
Iteration   4: 146629382,283 ops/s
Iteration   5: 146605020,454 ops/s

# Run progress: 7,62% complete, ETA 02:42:20
# Fork: 4 of 5
# Warmup Iteration   1: 144267989,185 ops/s
# Warmup Iteration   2: 146586720,236 ops/s
# Warmup Iteration   3: 146569101,580 ops/s
# Warmup Iteration   4: 146290652,998 ops/s
# Warmup Iteration   5: 146592770,661 ops/s
Iteration   1: 146548488,307 ops/s
Iteration   2: 146509482,864 ops/s
Iteration   3: 146361185,213 ops/s
Iteration   4: 146634998,599 ops/s
Iteration   5: 146394257,224 ops/s

# Run progress: 8,57% complete, ETA 02:40:38
# Fork: 5 of 5
# Warmup Iteration   1: 144459308,092 ops/s
# Warmup Iteration   2: 146224802,050 ops/s
# Warmup Iteration   3: 145801935,802 ops/s
# Warmup Iteration   4: 146058561,609 ops/s
# Warmup Iteration   5: 146078028,809 ops/s
Iteration   1: 146018944,766 ops/s
Iteration   2: 145830410,903 ops/s
Iteration   3: 146004473,056 ops/s
Iteration   4: 145744072,403 ops/s
Iteration   5: 145968547,531 ops/s


Result "org.sample.MyBenchmark.javaUtilListOf10":
  146047937,576 ±(99.9%) 571940,991 ops/s [Average]
  (min, avg, max) = (143683993,132, 146047937,576, 146634998,599), stdev = 763524,860
  CI (99.9%): [145475996,585, 146619878,567] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.javaUtilListOf5

# Run progress: 9,52% complete, ETA 02:38:56
# Fork: 1 of 5
# Warmup Iteration   1: 229651409,955 ops/s
# Warmup Iteration   2: 225673915,968 ops/s
# Warmup Iteration   3: 232990887,214 ops/s
# Warmup Iteration   4: 233734280,652 ops/s
# Warmup Iteration   5: 232448874,869 ops/s
Iteration   1: 232566144,230 ops/s
Iteration   2: 233441373,265 ops/s
Iteration   3: 233559062,432 ops/s
Iteration   4: 229796481,772 ops/s
Iteration   5: 233375955,749 ops/s

# Run progress: 10,48% complete, ETA 02:37:14
# Fork: 2 of 5
# Warmup Iteration   1: 231383583,293 ops/s
# Warmup Iteration   2: 241093213,966 ops/s
# Warmup Iteration   3: 235664124,260 ops/s
# Warmup Iteration   4: 235929617,540 ops/s
# Warmup Iteration   5: 231552995,251 ops/s
Iteration   1: 230992363,839 ops/s
Iteration   2: 235871123,300 ops/s
Iteration   3: 231540056,712 ops/s
Iteration   4: 231424737,599 ops/s
Iteration   5: 231235602,701 ops/s

# Run progress: 11,43% complete, ETA 02:35:33
# Fork: 3 of 5
# Warmup Iteration   1: 234135212,258 ops/s
# Warmup Iteration   2: 238036999,014 ops/s
# Warmup Iteration   3: 239948461,747 ops/s
# Warmup Iteration   4: 240932986,895 ops/s
# Warmup Iteration   5: 239509452,341 ops/s
Iteration   1: 239963182,782 ops/s
Iteration   2: 237103282,767 ops/s
Iteration   3: 237730134,660 ops/s
Iteration   4: 240720364,122 ops/s
Iteration   5: 240327890,100 ops/s

# Run progress: 12,38% complete, ETA 02:33:52
# Fork: 4 of 5
# Warmup Iteration   1: 232146503,999 ops/s
# Warmup Iteration   2: 237478236,093 ops/s
# Warmup Iteration   3: 233646313,046 ops/s
# Warmup Iteration   4: 234544537,951 ops/s
# Warmup Iteration   5: 230685319,114 ops/s
Iteration   1: 230917895,490 ops/s
Iteration   2: 234700407,853 ops/s
Iteration   3: 234404603,702 ops/s
Iteration   4: 230593971,595 ops/s
Iteration   5: 234320329,652 ops/s

# Run progress: 13,33% complete, ETA 02:32:11
# Fork: 5 of 5
# Warmup Iteration   1: 233254411,009 ops/s
# Warmup Iteration   2: 238942809,997 ops/s
# Warmup Iteration   3: 235819746,237 ops/s
# Warmup Iteration   4: 235197986,899 ops/s
# Warmup Iteration   5: 231870758,259 ops/s
Iteration   1: 231435171,853 ops/s
Iteration   2: 236516061,338 ops/s
Iteration   3: 235877733,828 ops/s
Iteration   4: 231877729,751 ops/s
Iteration   5: 231429683,108 ops/s


Result "org.sample.MyBenchmark.javaUtilListOf5":
  234068853,768 ±(99.9%) 2403518,025 ops/s [Average]
  (min, avg, max) = (229796481,772, 234068853,768, 240720364,122), stdev = 3208627,798
  CI (99.9%): [231665335,743, 236472371,793] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.javaUtilListOfVararg100

# Run progress: 14,29% complete, ETA 02:30:30
# Fork: 1 of 5
# Warmup Iteration   1: 5927826,080 ops/s
# Warmup Iteration   2: 5973814,820 ops/s
# Warmup Iteration   3: 6045050,828 ops/s
# Warmup Iteration   4: 6047773,682 ops/s
# Warmup Iteration   5: 6049205,742 ops/s
Iteration   1: 6055064,813 ops/s
Iteration   2: 6053892,253 ops/s
Iteration   3: 6043420,533 ops/s
Iteration   4: 6044505,701 ops/s
Iteration   5: 6045884,997 ops/s

# Run progress: 15,24% complete, ETA 02:28:49
# Fork: 2 of 5
# Warmup Iteration   1: 5941794,214 ops/s
# Warmup Iteration   2: 5972530,683 ops/s
# Warmup Iteration   3: 6031688,818 ops/s
# Warmup Iteration   4: 6034290,210 ops/s
# Warmup Iteration   5: 6050321,605 ops/s
Iteration   1: 6049915,529 ops/s
Iteration   2: 6048296,782 ops/s
Iteration   3: 6056068,833 ops/s
Iteration   4: 6047270,399 ops/s
Iteration   5: 6045073,771 ops/s

# Run progress: 16,19% complete, ETA 02:27:08
# Fork: 3 of 5
# Warmup Iteration   1: 6136560,726 ops/s
# Warmup Iteration   2: 6149056,889 ops/s
# Warmup Iteration   3: 6145528,301 ops/s
# Warmup Iteration   4: 6149185,783 ops/s
# Warmup Iteration   5: 6149822,086 ops/s
Iteration   1: 6142188,990 ops/s
Iteration   2: 6150237,452 ops/s
Iteration   3: 6146664,786 ops/s
Iteration   4: 6145423,414 ops/s
Iteration   5: 6147387,925 ops/s

# Run progress: 17,14% complete, ETA 02:25:28
# Fork: 4 of 5
# Warmup Iteration   1: 5936122,762 ops/s
# Warmup Iteration   2: 5969363,763 ops/s
# Warmup Iteration   3: 6045684,635 ops/s
# Warmup Iteration   4: 6048950,718 ops/s
# Warmup Iteration   5: 6055430,057 ops/s
Iteration   1: 6053641,832 ops/s
Iteration   2: 6047324,775 ops/s
Iteration   3: 6036613,566 ops/s
Iteration   4: 6047213,595 ops/s
Iteration   5: 6049238,139 ops/s

# Run progress: 18,10% complete, ETA 02:23:47
# Fork: 5 of 5
# Warmup Iteration   1: 5941963,363 ops/s
# Warmup Iteration   2: 5965753,541 ops/s
# Warmup Iteration   3: 6034784,875 ops/s
# Warmup Iteration   4: 6035361,407 ops/s
# Warmup Iteration   5: 6050975,998 ops/s
Iteration   1: 6051705,156 ops/s
Iteration   2: 6047241,850 ops/s
Iteration   3: 6044385,209 ops/s
Iteration   4: 6041580,584 ops/s
Iteration   5: 6042993,136 ops/s


Result "org.sample.MyBenchmark.javaUtilListOfVararg100":
  6067329,361 ±(99.9%) 30406,801 ops/s [Average]
  (min, avg, max) = (6036613,566, 6067329,361, 6150237,452), stdev = 40592,209
  CI (99.9%): [6036922,560, 6097736,162] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.javaUtilMapOf10

# Run progress: 19,05% complete, ETA 02:22:06
# Fork: 1 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.of(Map.java:1614)
	at org.sample.MyBenchmark.javaUtilMapOf10(MyBenchmark.kt:1058)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_thrpt_jmhStub(MyBenchmark_javaUtilMapOf10_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_Throughput(MyBenchmark_javaUtilMapOf10_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 20,00% complete, ETA 02:13:45
# Fork: 2 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.of(Map.java:1614)
	at org.sample.MyBenchmark.javaUtilMapOf10(MyBenchmark.kt:1058)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_thrpt_jmhStub(MyBenchmark_javaUtilMapOf10_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_Throughput(MyBenchmark_javaUtilMapOf10_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 20,95% complete, ETA 02:06:10
# Fork: 3 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.of(Map.java:1614)
	at org.sample.MyBenchmark.javaUtilMapOf10(MyBenchmark.kt:1058)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_thrpt_jmhStub(MyBenchmark_javaUtilMapOf10_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_Throughput(MyBenchmark_javaUtilMapOf10_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 21,90% complete, ETA 01:59:14
# Fork: 4 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.of(Map.java:1614)
	at org.sample.MyBenchmark.javaUtilMapOf10(MyBenchmark.kt:1058)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_thrpt_jmhStub(MyBenchmark_javaUtilMapOf10_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_Throughput(MyBenchmark_javaUtilMapOf10_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 22,86% complete, ETA 01:52:52
# Fork: 5 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.of(Map.java:1614)
	at org.sample.MyBenchmark.javaUtilMapOf10(MyBenchmark.kt:1058)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_thrpt_jmhStub(MyBenchmark_javaUtilMapOf10_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOf10_jmhTest.javaUtilMapOf10_Throughput(MyBenchmark_javaUtilMapOf10_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.javaUtilMapOfEntriesVararg100

# Run progress: 23,81% complete, ETA 01:47:01
# Fork: 1 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.ofEntries(Map.java:1668)
	at org.sample.MyBenchmark.javaUtilMapOfEntriesVararg100(MyBenchmark.kt:902)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_thrpt_jmhStub(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_Throughput(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 24,76% complete, ETA 01:41:37
# Fork: 2 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.ofEntries(Map.java:1668)
	at org.sample.MyBenchmark.javaUtilMapOfEntriesVararg100(MyBenchmark.kt:902)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_thrpt_jmhStub(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_Throughput(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 25,71% complete, ETA 01:36:37
# Fork: 3 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.ofEntries(Map.java:1668)
	at org.sample.MyBenchmark.javaUtilMapOfEntriesVararg100(MyBenchmark.kt:902)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_thrpt_jmhStub(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_Throughput(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 26,67% complete, ETA 01:31:59
# Fork: 4 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.ofEntries(Map.java:1668)
	at org.sample.MyBenchmark.javaUtilMapOfEntriesVararg100(MyBenchmark.kt:902)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_thrpt_jmhStub(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_Throughput(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)



# Run progress: 27,62% complete, ETA 01:27:40
# Fork: 5 of 5
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: duplicate key: foo
	at java.base/java.util.ImmutableCollections$MapN.<init>(ImmutableCollections.java:1189)
	at java.base/java.util.Map.ofEntries(Map.java:1668)
	at org.sample.MyBenchmark.javaUtilMapOfEntriesVararg100(MyBenchmark.kt:902)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_thrpt_jmhStub(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:121)
	at org.sample.jmh_generated.MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.javaUtilMapOfEntriesVararg100_Throughput(MyBenchmark_javaUtilMapOfEntriesVararg100_jmhTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:527)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:504)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)




# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.kotlinListOfVararg10

# Run progress: 28,57% complete, ETA 01:23:38
# Fork: 1 of 5
# Warmup Iteration   1: 123593343,249 ops/s
# Warmup Iteration   2: 125259833,381 ops/s
# Warmup Iteration   3: 112670187,761 ops/s
# Warmup Iteration   4: 112714292,341 ops/s
# Warmup Iteration   5: 112296760,729 ops/s
Iteration   1: 112664422,511 ops/s
Iteration   2: 112643465,132 ops/s
Iteration   3: 112525858,001 ops/s
Iteration   4: 112697556,437 ops/s
Iteration   5: 112585485,979 ops/s

# Run progress: 29,52% complete, ETA 01:23:50
# Fork: 2 of 5
# Warmup Iteration   1: 119472655,161 ops/s
# Warmup Iteration   2: 121136415,852 ops/s
# Warmup Iteration   3: 109227757,932 ops/s
# Warmup Iteration   4: 109159223,799 ops/s
# Warmup Iteration   5: 109189281,511 ops/s
Iteration   1: 109126566,846 ops/s
Iteration   2: 109280067,640 ops/s
Iteration   3: 109128579,560 ops/s
Iteration   4: 109066328,645 ops/s
Iteration   5: 109176772,483 ops/s

# Run progress: 30,48% complete, ETA 01:23:56
# Fork: 3 of 5
# Warmup Iteration   1: 119681267,363 ops/s
# Warmup Iteration   2: 121159367,403 ops/s
# Warmup Iteration   3: 108673998,213 ops/s
# Warmup Iteration   4: 108976245,655 ops/s
# Warmup Iteration   5: 108955221,066 ops/s
Iteration   1: 109110102,008 ops/s
Iteration   2: 109111990,797 ops/s
Iteration   3: 109112122,622 ops/s
Iteration   4: 109121075,390 ops/s
Iteration   5: 109091803,473 ops/s

# Run progress: 31,43% complete, ETA 01:23:55
# Fork: 4 of 5
# Warmup Iteration   1: 119288731,417 ops/s
# Warmup Iteration   2: 121310156,731 ops/s
# Warmup Iteration   3: 109077181,860 ops/s
# Warmup Iteration   4: 108980899,460 ops/s
# Warmup Iteration   5: 109088175,076 ops/s
Iteration   1: 108972702,085 ops/s
Iteration   2: 109185709,494 ops/s
Iteration   3: 109083876,304 ops/s
Iteration   4: 109159469,711 ops/s
Iteration   5: 108981666,997 ops/s

# Run progress: 32,38% complete, ETA 01:23:48
# Fork: 5 of 5
# Warmup Iteration   1: 119900869,892 ops/s
# Warmup Iteration   2: 121179977,705 ops/s
# Warmup Iteration   3: 108890566,617 ops/s
# Warmup Iteration   4: 109227633,652 ops/s
# Warmup Iteration   5: 109219879,992 ops/s
Iteration   1: 109241063,343 ops/s
Iteration   2: 109055829,065 ops/s
Iteration   3: 109111081,519 ops/s
Iteration   4: 109021059,079 ops/s
Iteration   5: 109221844,881 ops/s


Result "org.sample.MyBenchmark.kotlinListOfVararg10":
  109819060,000 ±(99.9%) 1073487,245 ops/s [Average]
  (min, avg, max) = (108972702,085, 109819060,000, 112697556,437), stdev = 1433074,760
  CI (99.9%): [108745572,755, 110892547,245] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.kotlinListOfVararg100

# Run progress: 33,33% complete, ETA 01:23:36
# Fork: 1 of 5
# Warmup Iteration   1: 12004134,351 ops/s
# Warmup Iteration   2: 12112536,973 ops/s
# Warmup Iteration   3: 12156947,110 ops/s
# Warmup Iteration   4: 12178361,653 ops/s
# Warmup Iteration   5: 12174967,026 ops/s
Iteration   1: 12180870,081 ops/s
Iteration   2: 12181219,004 ops/s
Iteration   3: 12182600,041 ops/s
Iteration   4: 12174994,660 ops/s
Iteration   5: 12161632,395 ops/s

# Run progress: 34,29% complete, ETA 01:23:19
# Fork: 2 of 5
# Warmup Iteration   1: 12020488,244 ops/s
# Warmup Iteration   2: 12101424,324 ops/s
# Warmup Iteration   3: 12178557,545 ops/s
# Warmup Iteration   4: 12155723,072 ops/s
# Warmup Iteration   5: 12172547,017 ops/s
Iteration   1: 12168323,122 ops/s
Iteration   2: 12181085,941 ops/s
Iteration   3: 12178934,631 ops/s
Iteration   4: 12176412,517 ops/s
Iteration   5: 12191313,929 ops/s

# Run progress: 35,24% complete, ETA 01:22:58
# Fork: 3 of 5
# Warmup Iteration   1: 11921267,272 ops/s
# Warmup Iteration   2: 11908492,100 ops/s
# Warmup Iteration   3: 11827647,036 ops/s
# Warmup Iteration   4: 11699337,898 ops/s
# Warmup Iteration   5: 12143361,700 ops/s
Iteration   1: 12159052,297 ops/s
Iteration   2: 12156178,489 ops/s
Iteration   3: 12144063,229 ops/s
Iteration   4: 12168298,403 ops/s
Iteration   5: 12159322,810 ops/s

# Run progress: 36,19% complete, ETA 01:22:32
# Fork: 4 of 5
# Warmup Iteration   1: 12377773,536 ops/s
# Warmup Iteration   2: 12469853,920 ops/s
# Warmup Iteration   3: 12533409,210 ops/s
# Warmup Iteration   4: 12544708,485 ops/s
# Warmup Iteration   5: 12573472,946 ops/s
Iteration   1: 12561575,206 ops/s
Iteration   2: 12572537,878 ops/s
Iteration   3: 12565326,889 ops/s
Iteration   4: 12558065,728 ops/s
Iteration   5: 12555445,142 ops/s

# Run progress: 37,14% complete, ETA 01:22:03
# Fork: 5 of 5
# Warmup Iteration   1: 12347832,349 ops/s
# Warmup Iteration   2: 12466618,774 ops/s
# Warmup Iteration   3: 12545639,115 ops/s
# Warmup Iteration   4: 12540729,756 ops/s
# Warmup Iteration   5: 12541890,198 ops/s
Iteration   1: 12546831,570 ops/s
Iteration   2: 12538669,369 ops/s
Iteration   3: 12547165,705 ops/s
Iteration   4: 12546765,246 ops/s
Iteration   5: 12550772,956 ops/s


Result "org.sample.MyBenchmark.kotlinListOfVararg100":
  12324298,290 ±(99.9%) 143847,001 ops/s [Average]
  (min, avg, max) = (12144063,229, 12324298,290, 12572537,878), stdev = 192031,631
  CI (99.9%): [12180451,288, 12468145,291] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.kotlinListOfVararg5

# Run progress: 38,10% complete, ETA 01:21:30
# Fork: 1 of 5
# Warmup Iteration   1: 174052870,706 ops/s
# Warmup Iteration   2: 185326950,076 ops/s
# Warmup Iteration   3: 201256448,261 ops/s
# Warmup Iteration   4: 200866899,802 ops/s
# Warmup Iteration   5: 200934014,118 ops/s
Iteration   1: 202872931,516 ops/s
Iteration   2: 203075603,714 ops/s
Iteration   3: 202800974,641 ops/s
Iteration   4: 201013464,458 ops/s
Iteration   5: 202288476,287 ops/s

# Run progress: 39,05% complete, ETA 01:20:54
# Fork: 2 of 5
# Warmup Iteration   1: 175357800,790 ops/s
# Warmup Iteration   2: 185803443,822 ops/s
# Warmup Iteration   3: 200171106,603 ops/s
# Warmup Iteration   4: 200798223,280 ops/s
# Warmup Iteration   5: 201317184,466 ops/s
Iteration   1: 201794591,918 ops/s
Iteration   2: 200812790,127 ops/s
Iteration   3: 202669655,815 ops/s
Iteration   4: 202314018,273 ops/s
Iteration   5: 201029033,070 ops/s

# Run progress: 40,00% complete, ETA 01:20:15
# Fork: 3 of 5
# Warmup Iteration   1: 174623683,747 ops/s
# Warmup Iteration   2: 186086090,113 ops/s
# Warmup Iteration   3: 200906353,190 ops/s
# Warmup Iteration   4: 200831656,282 ops/s
# Warmup Iteration   5: 200614136,025 ops/s
Iteration   1: 200723919,267 ops/s
Iteration   2: 202491436,193 ops/s
Iteration   3: 200734727,358 ops/s
Iteration   4: 200652492,423 ops/s
Iteration   5: 202668748,819 ops/s

# Run progress: 40,95% complete, ETA 01:19:33
# Fork: 4 of 5
# Warmup Iteration   1: 174601531,400 ops/s
# Warmup Iteration   2: 186793291,734 ops/s
# Warmup Iteration   3: 201058669,184 ops/s
# Warmup Iteration   4: 202167519,456 ops/s
# Warmup Iteration   5: 201301679,130 ops/s
Iteration   1: 201104546,847 ops/s
Iteration   2: 201747013,753 ops/s
Iteration   3: 202431042,084 ops/s
Iteration   4: 201607604,088 ops/s
Iteration   5: 201186507,750 ops/s

# Run progress: 41,90% complete, ETA 01:18:48
# Fork: 5 of 5
# Warmup Iteration   1: 175138151,406 ops/s
# Warmup Iteration   2: 184629666,993 ops/s
# Warmup Iteration   3: 201011410,896 ops/s
# Warmup Iteration   4: 200850848,062 ops/s
# Warmup Iteration   5: 201552352,917 ops/s
Iteration   1: 202363501,018 ops/s
Iteration   2: 202644416,956 ops/s
Iteration   3: 200468118,716 ops/s
Iteration   4: 201055299,929 ops/s
Iteration   5: 200743559,334 ops/s


Result "org.sample.MyBenchmark.kotlinListOfVararg5":
  201731778,974 ±(99.9%) 643769,996 ops/s [Average]
  (min, avg, max) = (200468118,716, 201731778,974, 203075603,714), stdev = 859414,526
  CI (99.9%): [201088008,979, 202375548,970] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.kotlinMapOfVararg10

# Run progress: 42,86% complete, ETA 01:18:01
# Fork: 1 of 5
# Warmup Iteration   1: 15665604,781 ops/s
# Warmup Iteration   2: 15695580,834 ops/s
# Warmup Iteration   3: 15791985,507 ops/s
# Warmup Iteration   4: 15806266,115 ops/s
# Warmup Iteration   5: 15887235,312 ops/s
Iteration   1: 15807834,375 ops/s
Iteration   2: 15818510,062 ops/s
Iteration   3: 15772541,274 ops/s
Iteration   4: 15750910,309 ops/s
Iteration   5: 15795323,496 ops/s

# Run progress: 43,81% complete, ETA 01:17:11
# Fork: 2 of 5
# Warmup Iteration   1: 15434651,336 ops/s
# Warmup Iteration   2: 15402739,093 ops/s
# Warmup Iteration   3: 15872353,391 ops/s
# Warmup Iteration   4: 15828068,859 ops/s
# Warmup Iteration   5: 15941037,965 ops/s
Iteration   1: 15851340,410 ops/s
Iteration   2: 15826724,462 ops/s
Iteration   3: 15892262,814 ops/s
Iteration   4: 15830720,527 ops/s
Iteration   5: 15925144,586 ops/s

# Run progress: 44,76% complete, ETA 01:16:19
# Fork: 3 of 5
# Warmup Iteration   1: 15506201,126 ops/s
# Warmup Iteration   2: 15246165,362 ops/s
# Warmup Iteration   3: 15634662,892 ops/s
# Warmup Iteration   4: 15673500,160 ops/s
# Warmup Iteration   5: 15608743,304 ops/s
Iteration   1: 15621047,385 ops/s
Iteration   2: 15611583,277 ops/s
Iteration   3: 15597079,591 ops/s
Iteration   4: 15571003,835 ops/s
Iteration   5: 15639171,803 ops/s

# Run progress: 45,71% complete, ETA 01:15:26
# Fork: 4 of 5
# Warmup Iteration   1: 15790747,581 ops/s
# Warmup Iteration   2: 15817040,458 ops/s
# Warmup Iteration   3: 15942207,417 ops/s
# Warmup Iteration   4: 15863006,701 ops/s
# Warmup Iteration   5: 15934704,165 ops/s
Iteration   1: 15904491,498 ops/s
Iteration   2: 15982714,199 ops/s
Iteration   3: 15816280,789 ops/s
Iteration   4: 15856444,682 ops/s
Iteration   5: 15967635,595 ops/s

# Run progress: 46,67% complete, ETA 01:14:30
# Fork: 5 of 5
# Warmup Iteration   1: 15415798,963 ops/s
# Warmup Iteration   2: 15761015,329 ops/s
# Warmup Iteration   3: 15767810,396 ops/s
# Warmup Iteration   4: 15707714,248 ops/s
# Warmup Iteration   5: 15720951,160 ops/s
Iteration   1: 15670529,385 ops/s
Iteration   2: 15762255,742 ops/s
Iteration   3: 15755054,185 ops/s
Iteration   4: 15668109,121 ops/s
Iteration   5: 15695130,079 ops/s


Result "org.sample.MyBenchmark.kotlinMapOfVararg10":
  15775593,739 ±(99.9%) 87654,591 ops/s [Average]
  (min, avg, max) = (15571003,835, 15775593,739, 15982714,199), stdev = 117016,371
  CI (99.9%): [15687939,149, 15863248,330] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.kotlinMapOfVararg100

# Run progress: 47,62% complete, ETA 01:13:33
# Fork: 1 of 5
# Warmup Iteration   1: 1702748,405 ops/s
# Warmup Iteration   2: 1725691,995 ops/s
# Warmup Iteration   3: 1679003,260 ops/s
# Warmup Iteration   4: 1682649,225 ops/s
# Warmup Iteration   5: 1681069,552 ops/s
Iteration   1: 1680971,382 ops/s
Iteration   2: 1681148,958 ops/s
Iteration   3: 1681753,207 ops/s
Iteration   4: 1681708,469 ops/s
Iteration   5: 1682300,815 ops/s

# Run progress: 48,57% complete, ETA 01:12:34
# Fork: 2 of 5
# Warmup Iteration   1: 1656662,249 ops/s
# Warmup Iteration   2: 1677384,910 ops/s
# Warmup Iteration   3: 1669359,167 ops/s
# Warmup Iteration   4: 1671444,014 ops/s
# Warmup Iteration   5: 1668258,104 ops/s
Iteration   1: 1668129,969 ops/s
Iteration   2: 1666272,231 ops/s
Iteration   3: 1665765,973 ops/s
Iteration   4: 1667509,036 ops/s
Iteration   5: 1668969,045 ops/s

# Run progress: 49,52% complete, ETA 01:11:33
# Fork: 3 of 5
# Warmup Iteration   1: 2048366,721 ops/s
# Warmup Iteration   2: 2078622,683 ops/s
# Warmup Iteration   3: 2034986,179 ops/s
# Warmup Iteration   4: 2037208,696 ops/s
# Warmup Iteration   5: 2040156,138 ops/s
Iteration   1: 2039358,283 ops/s
Iteration   2: 2037198,468 ops/s
Iteration   3: 2038849,452 ops/s
Iteration   4: 2039020,914 ops/s
Iteration   5: 2036881,252 ops/s

# Run progress: 50,48% complete, ETA 01:10:31
# Fork: 4 of 5
# Warmup Iteration   1: 2051299,527 ops/s
# Warmup Iteration   2: 2078240,173 ops/s
# Warmup Iteration   3: 2032701,634 ops/s
# Warmup Iteration   4: 2031584,037 ops/s
# Warmup Iteration   5: 2034753,785 ops/s
Iteration   1: 2032628,400 ops/s
Iteration   2: 2037797,638 ops/s
Iteration   3: 2032501,722 ops/s
Iteration   4: 2038495,102 ops/s
Iteration   5: 2030085,488 ops/s

# Run progress: 51,43% complete, ETA 01:09:27
# Fork: 5 of 5
# Warmup Iteration   1: 2049554,795 ops/s
# Warmup Iteration   2: 2072757,807 ops/s
# Warmup Iteration   3: 2033451,558 ops/s
# Warmup Iteration   4: 2033139,648 ops/s
# Warmup Iteration   5: 2033781,471 ops/s
Iteration   1: 2034531,769 ops/s
Iteration   2: 2035086,023 ops/s
Iteration   3: 2033691,902 ops/s
Iteration   4: 2036420,306 ops/s
Iteration   5: 2038104,637 ops/s


Result "org.sample.MyBenchmark.kotlinMapOfVararg100":
  1891407,218 ±(99.9%) 135484,188 ops/s [Average]
  (min, avg, max) = (1665765,973, 1891407,218, 2039358,283), stdev = 180867,515
  CI (99.9%): [1755923,030, 2026891,406] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.kotlinMutableListOfVararg10

# Run progress: 52,38% complete, ETA 01:08:23
# Fork: 1 of 5
# Warmup Iteration   1: 75650151,177 ops/s
# Warmup Iteration   2: 77261081,480 ops/s
# Warmup Iteration   3: 77693549,957 ops/s
# Warmup Iteration   4: 77658324,236 ops/s
# Warmup Iteration   5: 77604768,747 ops/s
Iteration   1: 77654763,629 ops/s
Iteration   2: 77474472,887 ops/s
Iteration   3: 77383884,590 ops/s
Iteration   4: 77569277,895 ops/s
Iteration   5: 77539444,305 ops/s

# Run progress: 53,33% complete, ETA 01:07:16
# Fork: 2 of 5
# Warmup Iteration   1: 77513940,095 ops/s
# Warmup Iteration   2: 78638651,182 ops/s
# Warmup Iteration   3: 79092931,961 ops/s
# Warmup Iteration   4: 79166394,654 ops/s
# Warmup Iteration   5: 78654120,861 ops/s
Iteration   1: 79066325,104 ops/s
Iteration   2: 79179290,168 ops/s
Iteration   3: 79031345,365 ops/s
Iteration   4: 79079607,592 ops/s
Iteration   5: 79083092,550 ops/s

# Run progress: 54,29% complete, ETA 01:06:09
# Fork: 3 of 5
# Warmup Iteration   1: 77929057,758 ops/s
# Warmup Iteration   2: 78348148,510 ops/s
# Warmup Iteration   3: 78783636,566 ops/s
# Warmup Iteration   4: 78564898,811 ops/s
# Warmup Iteration   5: 78614253,262 ops/s
Iteration   1: 78899141,710 ops/s
Iteration   2: 78629288,419 ops/s
Iteration   3: 78440335,602 ops/s
Iteration   4: 78770715,348 ops/s
Iteration   5: 78700428,198 ops/s

# Run progress: 55,24% complete, ETA 01:05:01
# Fork: 4 of 5
# Warmup Iteration   1: 75784849,010 ops/s
# Warmup Iteration   2: 77186922,956 ops/s
# Warmup Iteration   3: 77227292,081 ops/s
# Warmup Iteration   4: 77564336,439 ops/s
# Warmup Iteration   5: 77477938,324 ops/s
Iteration   1: 77418256,088 ops/s
Iteration   2: 77289683,893 ops/s
Iteration   3: 77323313,338 ops/s
Iteration   4: 77433367,463 ops/s
Iteration   5: 77453168,844 ops/s

# Run progress: 56,19% complete, ETA 01:03:51
# Fork: 5 of 5
# Warmup Iteration   1: 77492945,962 ops/s
# Warmup Iteration   2: 78716832,025 ops/s
# Warmup Iteration   3: 78871547,570 ops/s
# Warmup Iteration   4: 79154742,792 ops/s
# Warmup Iteration   5: 79228373,828 ops/s
Iteration   1: 79158280,995 ops/s
Iteration   2: 79178302,531 ops/s
Iteration   3: 79164115,744 ops/s
Iteration   4: 79164470,780 ops/s
Iteration   5: 79164533,737 ops/s


Result "org.sample.MyBenchmark.kotlinMutableListOfVararg10":
  78369956,271 ±(99.9%) 589870,331 ops/s [Average]
  (min, avg, max) = (77289683,893, 78369956,271, 79179290,168), stdev = 787460,016
  CI (99.9%): [77780085,940, 78959826,603] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.kotlinMutableListOfVararg100

# Run progress: 57,14% complete, ETA 01:02:40
# Fork: 1 of 5
# Warmup Iteration   1: 10373686,794 ops/s
# Warmup Iteration   2: 10444238,734 ops/s
# Warmup Iteration   3: 9986936,970 ops/s
# Warmup Iteration   4: 10037130,247 ops/s
# Warmup Iteration   5: 10016974,558 ops/s
Iteration   1: 10028450,620 ops/s
Iteration   2: 10040355,285 ops/s
Iteration   3: 10032689,215 ops/s
Iteration   4: 10058234,197 ops/s
Iteration   5: 10021989,067 ops/s

# Run progress: 58,10% complete, ETA 01:01:29
# Fork: 2 of 5
# Warmup Iteration   1: 10320631,269 ops/s
# Warmup Iteration   2: 10458037,889 ops/s
# Warmup Iteration   3: 10016555,502 ops/s
# Warmup Iteration   4: 10031140,288 ops/s
# Warmup Iteration   5: 10033124,743 ops/s
Iteration   1: 10044771,796 ops/s
Iteration   2: 10019904,668 ops/s
Iteration   3: 10032969,754 ops/s
Iteration   4: 10037815,863 ops/s
Iteration   5: 10040236,357 ops/s

# Run progress: 59,05% complete, ETA 01:00:16
# Fork: 3 of 5
# Warmup Iteration   1: 10361245,044 ops/s
# Warmup Iteration   2: 10442332,516 ops/s
# Warmup Iteration   3: 9966979,434 ops/s
# Warmup Iteration   4: 9985872,653 ops/s
# Warmup Iteration   5: 10030326,853 ops/s
Iteration   1: 10030746,564 ops/s
Iteration   2: 10023975,721 ops/s
Iteration   3: 10028105,198 ops/s
Iteration   4: 10029183,979 ops/s
Iteration   5: 10035909,460 ops/s

# Run progress: 60,00% complete, ETA 00:59:03
# Fork: 4 of 5
# Warmup Iteration   1: 10632601,212 ops/s
# Warmup Iteration   2: 10730633,367 ops/s
# Warmup Iteration   3: 10327650,252 ops/s
# Warmup Iteration   4: 10288668,944 ops/s
# Warmup Iteration   5: 10279389,169 ops/s
Iteration   1: 10305865,102 ops/s
Iteration   2: 10291352,011 ops/s
Iteration   3: 10319148,765 ops/s
Iteration   4: 10289513,603 ops/s
Iteration   5: 10293331,038 ops/s

# Run progress: 60,95% complete, ETA 00:57:49
# Fork: 5 of 5
# Warmup Iteration   1: 10349412,760 ops/s
# Warmup Iteration   2: 10471235,579 ops/s
# Warmup Iteration   3: 10021966,935 ops/s
# Warmup Iteration   4: 10048817,352 ops/s
# Warmup Iteration   5: 10027838,882 ops/s
Iteration   1: 10041285,977 ops/s
Iteration   2: 10016858,940 ops/s
Iteration   3: 10030187,949 ops/s
Iteration   4: 10000953,706 ops/s
Iteration   5: 10034855,338 ops/s


Result "org.sample.MyBenchmark.kotlinMutableListOfVararg100":
  10085147,607 ±(99.9%) 82538,950 ops/s [Average]
  (min, avg, max) = (10000953,706, 10085147,607, 10319148,765), stdev = 110187,137
  CI (99.9%): [10002608,657, 10167686,557] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.kotlinMutableListOfVararg5

# Run progress: 61,90% complete, ETA 00:56:34
# Fork: 1 of 5
# Warmup Iteration   1: 92625221,850 ops/s
# Warmup Iteration   2: 97552439,681 ops/s
# Warmup Iteration   3: 101822915,982 ops/s
# Warmup Iteration   4: 101991255,918 ops/s
# Warmup Iteration   5: 101943426,595 ops/s
Iteration   1: 101990202,995 ops/s
Iteration   2: 101839494,110 ops/s
Iteration   3: 102002590,603 ops/s
Iteration   4: 102094538,306 ops/s
Iteration   5: 101936773,238 ops/s

# Run progress: 62,86% complete, ETA 00:55:18
# Fork: 2 of 5
# Warmup Iteration   1: 92852214,241 ops/s
# Warmup Iteration   2: 97525853,962 ops/s
# Warmup Iteration   3: 101691160,297 ops/s
# Warmup Iteration   4: 101763898,208 ops/s
# Warmup Iteration   5: 101824320,941 ops/s
Iteration   1: 101741269,044 ops/s
Iteration   2: 101836438,471 ops/s
Iteration   3: 101755978,513 ops/s
Iteration   4: 102000414,206 ops/s
Iteration   5: 101811269,300 ops/s

# Run progress: 63,81% complete, ETA 00:54:02
# Fork: 3 of 5
# Warmup Iteration   1: 92855019,109 ops/s
# Warmup Iteration   2: 97547015,528 ops/s
# Warmup Iteration   3: 101543665,329 ops/s
# Warmup Iteration   4: 101727754,181 ops/s
# Warmup Iteration   5: 101910170,972 ops/s
Iteration   1: 101459736,585 ops/s
Iteration   2: 101541206,367 ops/s
Iteration   3: 101297764,224 ops/s
Iteration   4: 101520706,184 ops/s
Iteration   5: 101676752,727 ops/s

# Run progress: 64,76% complete, ETA 00:52:44
# Fork: 4 of 5
# Warmup Iteration   1: 93087224,636 ops/s
# Warmup Iteration   2: 97263866,198 ops/s
# Warmup Iteration   3: 101714203,139 ops/s
# Warmup Iteration   4: 101969847,916 ops/s
# Warmup Iteration   5: 101932467,560 ops/s
Iteration   1: 101694106,965 ops/s
Iteration   2: 101734662,273 ops/s
Iteration   3: 101930535,480 ops/s
Iteration   4: 101767668,194 ops/s
Iteration   5: 101996170,970 ops/s

# Run progress: 65,71% complete, ETA 00:51:26
# Fork: 5 of 5
# Warmup Iteration   1: 93184426,087 ops/s
# Warmup Iteration   2: 98057698,780 ops/s
# Warmup Iteration   3: 102360195,884 ops/s
# Warmup Iteration   4: 102624836,309 ops/s
# Warmup Iteration   5: 102423589,624 ops/s
Iteration   1: 102626369,456 ops/s
Iteration   2: 102322082,975 ops/s
Iteration   3: 102321350,373 ops/s
Iteration   4: 102588632,104 ops/s
Iteration   5: 102340008,843 ops/s


Result "org.sample.MyBenchmark.kotlinMutableListOfVararg5":
  101913068,900 ±(99.9%) 249037,834 ops/s [Average]
  (min, avg, max) = (101297764,224, 101913068,900, 102626369,456), stdev = 332458,383
  CI (99.9%): [101664031,066, 102162106,734] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.manualAddHashMap10

# Run progress: 66,67% complete, ETA 00:50:08
# Fork: 1 of 5
# Warmup Iteration   1: 26845837,303 ops/s
# Warmup Iteration   2: 26531369,351 ops/s
# Warmup Iteration   3: 26019728,342 ops/s
# Warmup Iteration   4: 26464280,466 ops/s
# Warmup Iteration   5: 26137044,205 ops/s
Iteration   1: 26327377,283 ops/s
Iteration   2: 26255056,409 ops/s
Iteration   3: 26068326,176 ops/s
Iteration   4: 26145883,683 ops/s
Iteration   5: 26217036,329 ops/s

# Run progress: 67,62% complete, ETA 00:48:49
# Fork: 2 of 5
# Warmup Iteration   1: 26727395,625 ops/s
# Warmup Iteration   2: 26596630,785 ops/s
# Warmup Iteration   3: 26843222,487 ops/s
# Warmup Iteration   4: 26371515,793 ops/s
# Warmup Iteration   5: 26344662,086 ops/s
Iteration   1: 26481066,433 ops/s
Iteration   2: 26413763,435 ops/s
Iteration   3: 26439389,527 ops/s
Iteration   4: 26234982,695 ops/s
Iteration   5: 26101045,368 ops/s

# Run progress: 68,57% complete, ETA 00:47:29
# Fork: 3 of 5
# Warmup Iteration   1: 26854981,813 ops/s
# Warmup Iteration   2: 26100963,654 ops/s
# Warmup Iteration   3: 25951994,480 ops/s
# Warmup Iteration   4: 26166069,718 ops/s
# Warmup Iteration   5: 26145151,753 ops/s
Iteration   1: 25974787,315 ops/s
Iteration   2: 25944060,916 ops/s
Iteration   3: 26001924,103 ops/s
Iteration   4: 25989296,185 ops/s
Iteration   5: 26121488,964 ops/s

# Run progress: 69,52% complete, ETA 00:46:09
# Fork: 4 of 5
# Warmup Iteration   1: 26767059,132 ops/s
# Warmup Iteration   2: 26072246,438 ops/s
# Warmup Iteration   3: 26332943,206 ops/s
# Warmup Iteration   4: 26138061,823 ops/s
# Warmup Iteration   5: 26088148,771 ops/s
Iteration   1: 26100119,376 ops/s
Iteration   2: 26193239,669 ops/s
Iteration   3: 26105750,070 ops/s
Iteration   4: 26075372,541 ops/s
Iteration   5: 26046797,468 ops/s

# Run progress: 70,48% complete, ETA 00:44:48
# Fork: 5 of 5
# Warmup Iteration   1: 26570674,287 ops/s
# Warmup Iteration   2: 26552866,201 ops/s
# Warmup Iteration   3: 26339277,722 ops/s
# Warmup Iteration   4: 26176485,558 ops/s
# Warmup Iteration   5: 26151517,854 ops/s
Iteration   1: 26217721,548 ops/s
Iteration   2: 26220039,768 ops/s
Iteration   3: 26313899,408 ops/s
Iteration   4: 26319980,563 ops/s
Iteration   5: 26102777,847 ops/s


Result "org.sample.MyBenchmark.manualAddHashMap10":
  26176447,323 ±(99.9%) 110306,588 ops/s [Average]
  (min, avg, max) = (25944060,916, 26176447,323, 26481066,433), stdev = 147256,140
  CI (99.9%): [26066140,735, 26286753,912] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.manualAddHashMap100

# Run progress: 71,43% complete, ETA 00:43:27
# Fork: 1 of 5
# Warmup Iteration   1: 2010364,072 ops/s
# Warmup Iteration   2: 1978882,810 ops/s
# Warmup Iteration   3: 1923891,768 ops/s
# Warmup Iteration   4: 1949995,666 ops/s
# Warmup Iteration   5: 1940569,776 ops/s
Iteration   1: 1944227,235 ops/s
Iteration   2: 1945606,753 ops/s
Iteration   3: 1926540,986 ops/s
Iteration   4: 1930112,978 ops/s
Iteration   5: 1941712,931 ops/s

# Run progress: 72,38% complete, ETA 00:42:05
# Fork: 2 of 5
# Warmup Iteration   1: 2001928,121 ops/s
# Warmup Iteration   2: 1967884,959 ops/s
# Warmup Iteration   3: 1934450,466 ops/s
# Warmup Iteration   4: 1959988,122 ops/s
# Warmup Iteration   5: 1945680,456 ops/s
Iteration   1: 1947765,192 ops/s
Iteration   2: 1946473,647 ops/s
Iteration   3: 1924193,614 ops/s
Iteration   4: 1935154,758 ops/s
Iteration   5: 1948943,811 ops/s

# Run progress: 73,33% complete, ETA 00:40:43
# Fork: 3 of 5
# Warmup Iteration   1: 2015084,937 ops/s
# Warmup Iteration   2: 1990367,806 ops/s
# Warmup Iteration   3: 1943477,222 ops/s
# Warmup Iteration   4: 1999905,221 ops/s
# Warmup Iteration   5: 1927298,951 ops/s
Iteration   1: 1931448,388 ops/s
Iteration   2: 1949525,608 ops/s
Iteration   3: 1937511,554 ops/s
Iteration   4: 1944130,029 ops/s
Iteration   5: 1928863,546 ops/s

# Run progress: 74,29% complete, ETA 00:39:20
# Fork: 4 of 5
# Warmup Iteration   1: 2015340,914 ops/s
# Warmup Iteration   2: 1941214,931 ops/s
# Warmup Iteration   3: 1946682,526 ops/s
# Warmup Iteration   4: 1957172,676 ops/s
# Warmup Iteration   5: 1942004,074 ops/s
Iteration   1: 1933891,768 ops/s
Iteration   2: 1956690,250 ops/s
Iteration   3: 1962181,052 ops/s
Iteration   4: 1942150,891 ops/s
Iteration   5: 1953253,577 ops/s

# Run progress: 75,24% complete, ETA 00:37:57
# Fork: 5 of 5
# Warmup Iteration   1: 2035825,662 ops/s
# Warmup Iteration   2: 1970913,959 ops/s
# Warmup Iteration   3: 1941966,415 ops/s
# Warmup Iteration   4: 1948709,850 ops/s
# Warmup Iteration   5: 1949785,045 ops/s
Iteration   1: 1955638,521 ops/s
Iteration   2: 1932039,087 ops/s
Iteration   3: 1936201,578 ops/s
Iteration   4: 1948277,763 ops/s
Iteration   5: 1932694,264 ops/s


Result "org.sample.MyBenchmark.manualAddHashMap100":
  1941409,191 ±(99.9%) 7615,489 ops/s [Average]
  (min, avg, max) = (1924193,614, 1941409,191, 1962181,052), stdev = 10166,460
  CI (99.9%): [1933793,702, 1949024,681] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.manualAddLinkedHashMap10

# Run progress: 76,19% complete, ETA 00:36:33
# Fork: 1 of 5
# Warmup Iteration   1: 23772241,239 ops/s
# Warmup Iteration   2: 23272793,420 ops/s
# Warmup Iteration   3: 23078256,425 ops/s
# Warmup Iteration   4: 23186758,425 ops/s
# Warmup Iteration   5: 23155466,922 ops/s
Iteration   1: 23067106,327 ops/s
Iteration   2: 23025839,140 ops/s
Iteration   3: 23228191,142 ops/s
Iteration   4: 23210428,258 ops/s
Iteration   5: 23038466,778 ops/s

# Run progress: 77,14% complete, ETA 00:35:09
# Fork: 2 of 5
# Warmup Iteration   1: 23370031,720 ops/s
# Warmup Iteration   2: 23025740,871 ops/s
# Warmup Iteration   3: 22910518,126 ops/s
# Warmup Iteration   4: 22947068,552 ops/s
# Warmup Iteration   5: 22731878,224 ops/s
Iteration   1: 22916856,092 ops/s
Iteration   2: 22753583,251 ops/s
Iteration   3: 22790031,638 ops/s
Iteration   4: 22852912,810 ops/s
Iteration   5: 22796996,792 ops/s

# Run progress: 78,10% complete, ETA 00:33:45
# Fork: 3 of 5
# Warmup Iteration   1: 23904927,923 ops/s
# Warmup Iteration   2: 22692130,125 ops/s
# Warmup Iteration   3: 23225827,704 ops/s
# Warmup Iteration   4: 23140459,652 ops/s
# Warmup Iteration   5: 23086004,815 ops/s
Iteration   1: 23149190,434 ops/s
Iteration   2: 23087856,952 ops/s
Iteration   3: 23136471,775 ops/s
Iteration   4: 23036909,214 ops/s
Iteration   5: 23244885,986 ops/s

# Run progress: 79,05% complete, ETA 00:32:20
# Fork: 4 of 5
# Warmup Iteration   1: 24255850,247 ops/s
# Warmup Iteration   2: 23213238,447 ops/s
# Warmup Iteration   3: 22986245,059 ops/s
# Warmup Iteration   4: 22786690,111 ops/s
# Warmup Iteration   5: 22887495,475 ops/s
Iteration   1: 22904527,454 ops/s
Iteration   2: 23009830,242 ops/s
Iteration   3: 22797294,940 ops/s
Iteration   4: 22735853,066 ops/s
Iteration   5: 23060284,249 ops/s

# Run progress: 80,00% complete, ETA 00:30:55
# Fork: 5 of 5
# Warmup Iteration   1: 24806489,159 ops/s
# Warmup Iteration   2: 24683739,014 ops/s
# Warmup Iteration   3: 23526500,985 ops/s
# Warmup Iteration   4: 23399662,378 ops/s
# Warmup Iteration   5: 23579258,181 ops/s
Iteration   1: 23144600,252 ops/s
Iteration   2: 23257859,519 ops/s
Iteration   3: 23085571,176 ops/s
Iteration   4: 23287726,082 ops/s
Iteration   5: 23193553,410 ops/s


Result "org.sample.MyBenchmark.manualAddLinkedHashMap10":
  23032513,079 ±(99.9%) 127907,230 ops/s [Average]
  (min, avg, max) = (22735853,066, 23032513,079, 23287726,082), stdev = 170752,493
  CI (99.9%): [22904605,849, 23160420,310] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.manualAddLinkedHashMap100

# Run progress: 80,95% complete, ETA 00:29:29
# Fork: 1 of 5
# Warmup Iteration   1: 1788684,033 ops/s
# Warmup Iteration   2: 1713839,821 ops/s
# Warmup Iteration   3: 1700587,330 ops/s
# Warmup Iteration   4: 1676600,103 ops/s
# Warmup Iteration   5: 1694891,228 ops/s
Iteration   1: 1695070,934 ops/s
Iteration   2: 1684800,483 ops/s
Iteration   3: 1676535,336 ops/s
Iteration   4: 1676349,787 ops/s
Iteration   5: 1686667,823 ops/s

# Run progress: 81,90% complete, ETA 00:28:03
# Fork: 2 of 5
# Warmup Iteration   1: 1782844,553 ops/s
# Warmup Iteration   2: 1710740,379 ops/s
# Warmup Iteration   3: 1690685,572 ops/s
# Warmup Iteration   4: 1684791,498 ops/s
# Warmup Iteration   5: 1691812,410 ops/s
Iteration   1: 1715779,427 ops/s
Iteration   2: 1719166,442 ops/s
Iteration   3: 1697794,048 ops/s
Iteration   4: 1689531,386 ops/s
Iteration   5: 1691225,107 ops/s

# Run progress: 82,86% complete, ETA 00:26:37
# Fork: 3 of 5
# Warmup Iteration   1: 1737277,001 ops/s
# Warmup Iteration   2: 1714741,454 ops/s
# Warmup Iteration   3: 1696620,068 ops/s
# Warmup Iteration   4: 1716702,768 ops/s
# Warmup Iteration   5: 1680164,898 ops/s
Iteration   1: 1682979,119 ops/s
Iteration   2: 1688646,280 ops/s
Iteration   3: 1683112,063 ops/s
Iteration   4: 1712026,360 ops/s
Iteration   5: 1706137,135 ops/s

# Run progress: 83,81% complete, ETA 00:25:10
# Fork: 4 of 5
# Warmup Iteration   1: 1765937,727 ops/s
# Warmup Iteration   2: 1716765,544 ops/s
# Warmup Iteration   3: 1901521,399 ops/s
# Warmup Iteration   4: 1734338,766 ops/s
# Warmup Iteration   5: 1736926,849 ops/s
Iteration   1: 1753737,531 ops/s
Iteration   2: 1756273,285 ops/s
Iteration   3: 1740057,949 ops/s
Iteration   4: 1760497,260 ops/s
Iteration   5: 1747958,715 ops/s

# Run progress: 84,76% complete, ETA 00:23:44
# Fork: 5 of 5
# Warmup Iteration   1: 1840131,293 ops/s
# Warmup Iteration   2: 1768645,339 ops/s
# Warmup Iteration   3: 1700240,412 ops/s
# Warmup Iteration   4: 1660194,200 ops/s
# Warmup Iteration   5: 1675315,958 ops/s
Iteration   1: 1681827,946 ops/s
Iteration   2: 1686698,219 ops/s
Iteration   3: 1684934,762 ops/s
Iteration   4: 1668100,584 ops/s
Iteration   5: 1671185,058 ops/s


Result "org.sample.MyBenchmark.manualAddLinkedHashMap100":
  1702283,722 ±(99.9%) 21246,416 ops/s [Average]
  (min, avg, max) = (1668100,584, 1702283,722, 1760497,260), stdev = 28363,357
  CI (99.9%): [1681037,306, 1723530,137] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.manualAddToArrayList10

# Run progress: 85,71% complete, ETA 00:22:16
# Fork: 1 of 5
# Warmup Iteration   1: 39035588,302 ops/s
# Warmup Iteration   2: 43237940,728 ops/s
# Warmup Iteration   3: 40468446,395 ops/s
# Warmup Iteration   4: 40548234,489 ops/s
# Warmup Iteration   5: 40459084,695 ops/s
Iteration   1: 40438870,197 ops/s
Iteration   2: 40495534,784 ops/s
Iteration   3: 40549467,438 ops/s
Iteration   4: 40480024,497 ops/s
Iteration   5: 40540311,293 ops/s

# Run progress: 86,67% complete, ETA 00:20:49
# Fork: 2 of 5
# Warmup Iteration   1: 37914701,294 ops/s
# Warmup Iteration   2: 43326863,786 ops/s
# Warmup Iteration   3: 44659772,371 ops/s
# Warmup Iteration   4: 44718027,155 ops/s
# Warmup Iteration   5: 44641914,303 ops/s
Iteration   1: 44677554,306 ops/s
Iteration   2: 44698931,680 ops/s
Iteration   3: 44692374,713 ops/s
Iteration   4: 44763413,164 ops/s
Iteration   5: 44747697,739 ops/s

# Run progress: 87,62% complete, ETA 00:19:21
# Fork: 3 of 5
# Warmup Iteration   1: 38307632,873 ops/s
# Warmup Iteration   2: 44342613,822 ops/s
# Warmup Iteration   3: 44169775,075 ops/s
# Warmup Iteration   4: 43835773,202 ops/s
# Warmup Iteration   5: 44302226,928 ops/s
Iteration   1: 44386014,207 ops/s
Iteration   2: 44365663,424 ops/s
Iteration   3: 44319098,759 ops/s
Iteration   4: 44275567,810 ops/s
Iteration   5: 44403869,834 ops/s

# Run progress: 88,57% complete, ETA 00:17:53
# Fork: 4 of 5
# Warmup Iteration   1: 38352835,533 ops/s
# Warmup Iteration   2: 42395012,689 ops/s
# Warmup Iteration   3: 44424891,497 ops/s
# Warmup Iteration   4: 44496420,350 ops/s
# Warmup Iteration   5: 44494724,616 ops/s
Iteration   1: 44753872,632 ops/s
Iteration   2: 44633591,970 ops/s
Iteration   3: 44444158,966 ops/s
Iteration   4: 44669588,544 ops/s
Iteration   5: 44440923,430 ops/s

# Run progress: 89,52% complete, ETA 00:16:25
# Fork: 5 of 5
# Warmup Iteration   1: 38412326,242 ops/s
# Warmup Iteration   2: 45587881,871 ops/s
# Warmup Iteration   3: 42076408,577 ops/s
# Warmup Iteration   4: 42064791,739 ops/s
# Warmup Iteration   5: 42009798,461 ops/s
Iteration   1: 42236539,665 ops/s
Iteration   2: 42344531,510 ops/s
Iteration   3: 42239892,314 ops/s
Iteration   4: 42184287,671 ops/s
Iteration   5: 42116207,715 ops/s


Result "org.sample.MyBenchmark.manualAddToArrayList10":
  43275919,530 ±(99.9%) 1269366,928 ops/s [Average]
  (min, avg, max) = (40438870,197, 43275919,530, 44763413,164), stdev = 1694568,532
  CI (99.9%): [42006552,603, 44545286,458] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.manualAddToArrayList100

# Run progress: 90,48% complete, ETA 00:14:57
# Fork: 1 of 5
# Warmup Iteration   1: 3236716,193 ops/s
# Warmup Iteration   2: 2764217,026 ops/s
# Warmup Iteration   3: 6065048,757 ops/s
# Warmup Iteration   4: 6070697,534 ops/s
# Warmup Iteration   5: 6067966,451 ops/s
Iteration   1: 6074722,587 ops/s
Iteration   2: 6069180,952 ops/s
Iteration   3: 6068720,044 ops/s
Iteration   4: 6066992,781 ops/s
Iteration   5: 6075645,417 ops/s

# Run progress: 91,43% complete, ETA 00:13:28
# Fork: 2 of 5
# Warmup Iteration   1: 3287700,815 ops/s
# Warmup Iteration   2: 2565662,576 ops/s
# Warmup Iteration   3: 6030355,272 ops/s
# Warmup Iteration   4: 6037355,547 ops/s
# Warmup Iteration   5: 6033243,611 ops/s
Iteration   1: 6035202,936 ops/s
Iteration   2: 6038176,076 ops/s
Iteration   3: 6038026,220 ops/s
Iteration   4: 6041283,136 ops/s
Iteration   5: 6033460,497 ops/s

# Run progress: 92,38% complete, ETA 00:11:59
# Fork: 3 of 5
# Warmup Iteration   1: 3241225,237 ops/s
# Warmup Iteration   2: 2564630,336 ops/s
# Warmup Iteration   3: 6072628,892 ops/s
# Warmup Iteration   4: 6083223,817 ops/s
# Warmup Iteration   5: 6083218,770 ops/s
Iteration   1: 6075511,669 ops/s
Iteration   2: 6066793,578 ops/s
Iteration   3: 6076225,680 ops/s
Iteration   4: 6077860,764 ops/s
Iteration   5: 6080646,730 ops/s

# Run progress: 93,33% complete, ETA 00:10:30
# Fork: 4 of 5
# Warmup Iteration   1: 3285479,501 ops/s
# Warmup Iteration   2: 2637343,125 ops/s
# Warmup Iteration   3: 6113309,763 ops/s
# Warmup Iteration   4: 6132390,035 ops/s
# Warmup Iteration   5: 6131012,243 ops/s
Iteration   1: 6129610,638 ops/s
Iteration   2: 6129840,610 ops/s
Iteration   3: 6127854,358 ops/s
Iteration   4: 6125619,747 ops/s
Iteration   5: 6130876,125 ops/s

# Run progress: 94,29% complete, ETA 00:09:00
# Fork: 5 of 5
# Warmup Iteration   1: 3240173,913 ops/s
# Warmup Iteration   2: 2555414,347 ops/s
# Warmup Iteration   3: 6072021,654 ops/s
# Warmup Iteration   4: 6069127,085 ops/s
# Warmup Iteration   5: 6066981,817 ops/s
Iteration   1: 6070065,705 ops/s
Iteration   2: 6072215,381 ops/s
Iteration   3: 6068808,062 ops/s
Iteration   4: 6074711,964 ops/s
Iteration   5: 6060154,613 ops/s


Result "org.sample.MyBenchmark.manualAddToArrayList100":
  6076328,251 ±(99.9%) 22746,945 ops/s [Average]
  (min, avg, max) = (6033460,497, 6076328,251, 6130876,125), stdev = 30366,521
  CI (99.9%): [6053581,306, 6099075,196] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.manualAddToArrayList5

# Run progress: 95,24% complete, ETA 00:07:31
# Fork: 1 of 5
# Warmup Iteration   1: 85089718,030 ops/s
# Warmup Iteration   2: 83651840,832 ops/s
# Warmup Iteration   3: 88057774,581 ops/s
# Warmup Iteration   4: 88173956,084 ops/s
# Warmup Iteration   5: 88080713,103 ops/s
Iteration   1: 86647918,395 ops/s
Iteration   2: 86745050,676 ops/s
Iteration   3: 88199865,540 ops/s
Iteration   4: 88074068,635 ops/s
Iteration   5: 88143082,014 ops/s

# Run progress: 96,19% complete, ETA 00:06:01
# Fork: 2 of 5
# Warmup Iteration   1: 84868351,327 ops/s
# Warmup Iteration   2: 82765715,184 ops/s
# Warmup Iteration   3: 85827238,233 ops/s
# Warmup Iteration   4: 85870167,613 ops/s
# Warmup Iteration   5: 85826580,623 ops/s
Iteration   1: 85837756,552 ops/s
Iteration   2: 85601405,496 ops/s
Iteration   3: 85760423,857 ops/s
Iteration   4: 85837610,942 ops/s
Iteration   5: 85576877,053 ops/s

# Run progress: 97,14% complete, ETA 00:04:31
# Fork: 3 of 5
# Warmup Iteration   1: 85034899,862 ops/s
# Warmup Iteration   2: 82577463,964 ops/s
# Warmup Iteration   3: 85672356,425 ops/s
# Warmup Iteration   4: 85527402,046 ops/s
# Warmup Iteration   5: 85655809,633 ops/s
Iteration   1: 85729679,816 ops/s
Iteration   2: 85725803,934 ops/s
Iteration   3: 85630781,310 ops/s
Iteration   4: 85669334,313 ops/s
Iteration   5: 85598897,755 ops/s

# Run progress: 98,10% complete, ETA 00:03:01
# Fork: 4 of 5
# Warmup Iteration   1: 85023368,542 ops/s
# Warmup Iteration   2: 83953485,929 ops/s
# Warmup Iteration   3: 88202668,416 ops/s
# Warmup Iteration   4: 86937116,989 ops/s
# Warmup Iteration   5: 86693918,501 ops/s
Iteration   1: 88175153,542 ops/s
Iteration   2: 86768011,133 ops/s
Iteration   3: 88335487,652 ops/s
Iteration   4: 88321605,360 ops/s
Iteration   5: 86865827,948 ops/s

# Run progress: 99,05% complete, ETA 00:01:30
# Fork: 5 of 5
# Warmup Iteration   1: 83860510,193 ops/s
# Warmup Iteration   2: 82367254,019 ops/s
# Warmup Iteration   3: 86577360,339 ops/s
# Warmup Iteration   4: 85666893,014 ops/s
# Warmup Iteration   5: 86440571,943 ops/s
Iteration   1: 85877334,526 ops/s
Iteration   2: 85824198,100 ops/s
Iteration   3: 85767582,784 ops/s
Iteration   4: 85879345,829 ops/s
Iteration   5: 86469284,824 ops/s


Result "org.sample.MyBenchmark.manualAddToArrayList5":
  86522495,520 ±(99.9%) 781711,352 ops/s [Average]
  (min, avg, max) = (85576877,053, 86522495,520, 88335487,652), stdev = 1043562,289
  CI (99.9%): [85740784,168, 87304206,871] (assumes normal distribution)


# Run complete. Total time: 02:38:45

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                  Mode  Cnt           Score           Error  Units
MyBenchmark.baseline                      thrpt   25  3574457817,067 ± 190460737,093  ops/s

MyBenchmark.javaUtilListOf5               thrpt   25   234068853,768 ±   2403518,025  ops/s
MyBenchmark.kotlinListOfVararg5           thrpt   25   201731778,974 ±    643769,996  ops/s
MyBenchmark.kotlinMutableListOfVararg5    thrpt   25   101913068,900 ±    249037,834  ops/s
MyBenchmark.manualAddToArrayList5         thrpt   25    86522495,520 ±    781711,352  ops/s

MyBenchmark.javaUtilListOf10              thrpt   25   146047937,576 ±    571940,991  ops/s
MyBenchmark.kotlinListOfVararg10          thrpt   25   109819060,000 ±   1073487,245  ops/s
MyBenchmark.kotlinMutableListOfVararg10   thrpt   25    78369956,271 ±    589870,331  ops/s
MyBenchmark.manualAddToArrayList10        thrpt   25    43275919,530 ±   1269366,928  ops/s

MyBenchmark.kotlinListOfVararg100         thrpt   25    12324298,290 ±    143847,001  ops/s
MyBenchmark.kotlinMutableListOfVararg100  thrpt   25    10085147,607 ±     82538,950  ops/s
MyBenchmark.manualAddToArrayList100       thrpt   25     6076328,251 ±     22746,945  ops/s
MyBenchmark.javaUtilListOfVararg100       thrpt   25     6067329,361 ±     30406,801  ops/s

MyBenchmark.manualAddHashMap10            thrpt   25    26176447,323 ±    110306,588  ops/s
MyBenchmark.manualAddLinkedHashMap10      thrpt   25    23032513,079 ±    127907,230  ops/s
MyBenchmark.kotlinMapOfVararg10           thrpt   25    15775593,739 ±     87654,591  ops/s

MyBenchmark.manualAddHashMap100           thrpt   25     1941409,191 ±      7615,489  ops/s
MyBenchmark.kotlinMapOfVararg100          thrpt   25     1891407,218 ±    135484,188  ops/s
MyBenchmark.manualAddLinkedHashMap100     thrpt   25     1702283,722 ±     21246,416  ops/s
