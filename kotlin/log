# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.KotlinBenchmark.javaUtilListOf010

# Run progress: 0,00% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 145123586,435 ops/s
# Warmup Iteration   2: 145526504,000 ops/s
# Warmup Iteration   3: 145136459,326 ops/s
# Warmup Iteration   4: 145333547,627 ops/s
# Warmup Iteration   5: 145341190,998 ops/s
Iteration   1: 145137937,702 ops/s
Iteration   2: 145302496,494 ops/s
Iteration   3: 145286650,423 ops/s
Iteration   4: 145155049,374 ops/s
Iteration   5: 145278436,223 ops/s


Result "org.sample.KotlinBenchmark.javaUtilListOf010":
  145232114,043 ±(99.9%) 303699,612 ops/s [Average]
  (min, avg, max) = (145137937,702, 145232114,043, 145302496,494), stdev = 78869,825
  CI (99.9%): [144928414,432, 145535813,655] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.KotlinBenchmark.kotlinListOfVararg010

# Run progress: 50,00% complete, ETA 00:01:40
# Fork: 1 of 1
# Warmup Iteration   1: 120373875,666 ops/s
# Warmup Iteration   2: 121483013,727 ops/s
# Warmup Iteration   3: 109253337,654 ops/s
# Warmup Iteration   4: 109245513,460 ops/s
# Warmup Iteration   5: 109001910,844 ops/s
Iteration   1: 108986102,342 ops/s
Iteration   2: 109180603,108 ops/s
Iteration   3: 109273863,675 ops/s
Iteration   4: 109335255,426 ops/s
Iteration   5: 109211166,611 ops/s


Result "org.sample.KotlinBenchmark.kotlinListOfVararg010":
  109197398,232 ±(99.9%) 509280,115 ops/s [Average]
  (min, avg, max) = (108986102,342, 109197398,232, 109335255,426), stdev = 132258,429
  CI (99.9%): [108688118,117, 109706678,347] (assumes normal distribution)


# Run complete. Total time: 00:03:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                               Mode  Cnt          Score        Error  Units
KotlinBenchmark.javaUtilListOf010      thrpt    5  145232114,043 ± 303699,612  ops/s
KotlinBenchmark.kotlinListOfVararg010  thrpt    5  109197398,232 ± 509280,115  ops/s
