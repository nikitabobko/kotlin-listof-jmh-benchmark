# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010

# Run progress: 0,00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 28273510,792 ops/s
# Warmup Iteration   2: 27318194,185 ops/s
# Warmup Iteration   3: 25155214,902 ops/s
# Warmup Iteration   4: 23687327,385 ops/s
# Warmup Iteration   5: 24280553,640 ops/s
Iteration   1: 23832014,918 ops/s
Iteration   2: 24109250,613 ops/s
Iteration   3: 23657123,583 ops/s
Iteration   4: 24484275,584 ops/s
Iteration   5: 24144130,139 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010":
  24045358,967 ±(99.9%) 1221825,884 ops/s [Average]
  (min, avg, max) = (23657123,583, 24045358,967, 24484275,584), stdev = 317304,302
  CI (99.9%): [22823533,084, 25267184,851] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_ofVararg_010

# Run progress: 25,00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 28529197,638 ops/s
# Warmup Iteration   2: 27039239,853 ops/s
# Warmup Iteration   3: 25144303,705 ops/s
# Warmup Iteration   4: 26626267,142 ops/s
# Warmup Iteration   5: 42196017,664 ops/s
Iteration   1: 42166000,355 ops/s
Iteration   2: 33058422,458 ops/s
Iteration   3: 23705758,941 ops/s
Iteration   4: 23960076,198 ops/s
Iteration   5: 23264423,698 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_ofVararg_010":
  29230936,330 ±(99.9%) 31978569,431 ops/s [Average]
  (min, avg, max) = (23264423,698, 29230936,330, 42166000,355), stdev = 8304732,929
  CI (99.9%): [≈ 0, 61209505,761] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_of_010

# Run progress: 50,00% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 122067116,435 ops/s
# Warmup Iteration   2: 123802895,571 ops/s
# Warmup Iteration   3: 125708690,451 ops/s
# Warmup Iteration   4: 125379293,598 ops/s
# Warmup Iteration   5: 125464418,853 ops/s
Iteration   1: 125258206,555 ops/s
Iteration   2: 125494119,536 ops/s
Iteration   3: 125251894,245 ops/s
Iteration   4: 125425387,148 ops/s
Iteration   5: 125277358,859 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_of_010":
  125341393,268 ±(99.9%) 427970,945 ops/s [Average]
  (min, avg, max) = (125251894,245, 125341393,268, 125494119,536), stdev = 111142,695
  CI (99.9%): [124913422,324, 125769364,213] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.java_util_List_of_010

# Run progress: 75,00% complete, ETA 00:01:40
# Fork: 1 of 1
# Warmup Iteration   1: 122125161,155 ops/s
# Warmup Iteration   2: 122945732,301 ops/s
# Warmup Iteration   3: 125287682,678 ops/s
# Warmup Iteration   4: 125147781,005 ops/s
# Warmup Iteration   5: 125502568,787 ops/s
Iteration   1: 125269557,769 ops/s
Iteration   2: 125430507,626 ops/s
Iteration   3: 125323409,277 ops/s
Iteration   4: 125336140,526 ops/s
Iteration   5: 125405313,347 ops/s


Result "org.sample.JavaBenchmark.java_util_List_of_010":
  125352985,709 ±(99.9%) 250044,225 ops/s [Average]
  (min, avg, max) = (125269557,769, 125352985,709, 125430507,626), stdev = 64935,691
  CI (99.9%): [125102941,484, 125603029,934] (assumes normal distribution)


# Run complete. Total time: 00:06:40

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                Mode  Cnt          Score          Error  Units
JavaBenchmark.java_util_List_of_010                     thrpt    5  125352985,709 ±   250044,225  ops/s
JavaBenchmark.MyJavaListMimic_of_010                    thrpt    5  125341393,268 ±   427970,945  ops/s
JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010  thrpt    5   24045358,967 ±  1221825,884  ops/s
JavaBenchmark.MyJavaListMimic_ofVararg_010              thrpt    5   29230936,330 ± 31978569,431  ops/s
