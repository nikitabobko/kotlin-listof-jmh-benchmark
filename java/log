# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010

# Run progress: 0,00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 291311821,430 ops/s
# Warmup Iteration   2: 300707408,034 ops/s
# Warmup Iteration   3: 300041761,089 ops/s
# Warmup Iteration   4: 299878457,770 ops/s
# Warmup Iteration   5: 299152885,708 ops/s
Iteration   1: 300185971,576 ops/s
Iteration   2: 299362225,854 ops/s
Iteration   3: 299733943,578 ops/s
Iteration   4: 299790578,498 ops/s
Iteration   5: 299269666,789 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010":
  299668477,259 ±(99.9%) 1414600,272 ops/s [Average]
  (min, avg, max) = (299269666,789, 299668477,259, 300185971,576), stdev = 367367,198
  CI (99.9%): [298253876,987, 301083077,531] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_ofVararg_010

# Run progress: 25,00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 290817845,144 ops/s
# Warmup Iteration   2: 299141013,188 ops/s
# Warmup Iteration   3: 300035526,253 ops/s
# Warmup Iteration   4: 299937401,622 ops/s
# Warmup Iteration   5: 300480591,056 ops/s
Iteration   1: 299680376,165 ops/s
Iteration   2: 300170341,644 ops/s
Iteration   3: 299313928,144 ops/s
Iteration   4: 300309759,424 ops/s
Iteration   5: 299254702,974 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_ofVararg_010":
  299745821,670 ±(99.9%) 1856968,497 ops/s [Average]
  (min, avg, max) = (299254702,974, 299745821,670, 300309759,424), stdev = 482248,822
  CI (99.9%): [297888853,173, 301602790,167] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_of_010

# Run progress: 50,00% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 301338723,659 ops/s
# Warmup Iteration   2: 312057967,545 ops/s
# Warmup Iteration   3: 312367385,823 ops/s
# Warmup Iteration   4: 308352490,745 ops/s
# Warmup Iteration   5: 311499777,712 ops/s
Iteration   1: 311396121,338 ops/s
Iteration   2: 311524862,655 ops/s
Iteration   3: 312350061,024 ops/s
Iteration   4: 311602525,883 ops/s
Iteration   5: 311955772,021 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_of_010":
  311765868,584 ±(99.9%) 1489883,061 ops/s [Average]
  (min, avg, max) = (311396121,338, 311765868,584, 312350061,024), stdev = 386917,900
  CI (99.9%): [310275985,523, 313255751,646] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.java_util_List_of_010

# Run progress: 75,00% complete, ETA 00:01:40
# Fork: 1 of 1
# Warmup Iteration   1: 302352832,977 ops/s
# Warmup Iteration   2: 305983467,631 ops/s
# Warmup Iteration   3: 308807800,084 ops/s
# Warmup Iteration   4: 311506010,595 ops/s
# Warmup Iteration   5: 311256637,264 ops/s
Iteration   1: 312547225,834 ops/s
Iteration   2: 311580824,740 ops/s
Iteration   3: 311240259,859 ops/s
Iteration   4: 311203252,619 ops/s
Iteration   5: 312167418,008 ops/s


Result "org.sample.JavaBenchmark.java_util_List_of_010":
  311747796,212 ±(99.9%) 2275768,449 ops/s [Average]
  (min, avg, max) = (311203252,619, 311747796,212, 312547225,834), stdev = 591009,839
  CI (99.9%): [309472027,764, 314023564,661] (assumes normal distribution)


# Run complete. Total time: 00:06:40

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                Mode  Cnt          Score         Error  Units
JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010  thrpt    5  299668477,259 ± 1414600,272  ops/s
JavaBenchmark.MyJavaListMimic_ofVararg_010              thrpt    5  299745821,670 ± 1856968,497  ops/s
JavaBenchmark.MyJavaListMimic_of_010                    thrpt    5  311765868,584 ± 1489883,061  ops/s
JavaBenchmark.java_util_List_of_010                     thrpt    5  311747796,212 ± 2275768,449  ops/s
