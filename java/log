# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.arraysAsList010

# Run progress: 0,00% complete, ETA 00:08:20
# Fork: 1 of 1
# Warmup Iteration   1: 118910303,942 ops/s
# Warmup Iteration   2: 121527605,438 ops/s
# Warmup Iteration   3: 109228240,068 ops/s
# Warmup Iteration   4: 109352476,453 ops/s
# Warmup Iteration   5: 109303519,982 ops/s
Iteration   1: 109266698,962 ops/s
Iteration   2: 109311645,275 ops/s
Iteration   3: 109205915,886 ops/s
Iteration   4: 109366702,343 ops/s
Iteration   5: 109275787,209 ops/s


Result "org.sample.JavaBenchmark.arraysAsList010":
  109285349,935 ±(99.9%) 228284,508 ops/s [Average]
  (min, avg, max) = (109205915,886, 109285349,935, 109366702,343), stdev = 59284,762
  CI (99.9%): [109057065,426, 109513634,443] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.javaUtilListOf010

# Run progress: 20,00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 145164011,856 ops/s
# Warmup Iteration   2: 148020235,591 ops/s
# Warmup Iteration   3: 146471795,797 ops/s
# Warmup Iteration   4: 146480207,705 ops/s
# Warmup Iteration   5: 146555972,745 ops/s
Iteration   1: 146588435,490 ops/s
Iteration   2: 146309900,096 ops/s
Iteration   3: 145605089,256 ops/s
Iteration   4: 146575376,506 ops/s
Iteration   5: 146411758,879 ops/s


Result "org.sample.JavaBenchmark.javaUtilListOf010":
  146298112,045 ±(99.9%) 1557606,211 ops/s [Average]
  (min, avg, max) = (145605089,256, 146298112,045, 146588435,490), stdev = 404505,387
  CI (99.9%): [144740505,834, 147855718,257] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.kotlinListOfVararg010

# Run progress: 40,00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 120015616,210 ops/s
# Warmup Iteration   2: 121535190,939 ops/s
# Warmup Iteration   3: 109331003,034 ops/s
# Warmup Iteration   4: 109267234,542 ops/s
# Warmup Iteration   5: 109366269,520 ops/s
Iteration   1: 109163483,887 ops/s
Iteration   2: 109369735,960 ops/s
Iteration   3: 109326612,610 ops/s
Iteration   4: 109464429,758 ops/s
Iteration   5: 109304096,811 ops/s


Result "org.sample.JavaBenchmark.kotlinListOfVararg010":
  109325671,805 ±(99.9%) 421670,589 ops/s [Average]
  (min, avg, max) = (109163483,887, 109325671,805, 109464429,758), stdev = 109506,513
  CI (99.9%): [108904001,216, 109747342,394] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.myJavaListMimicOf010

# Run progress: 60,00% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 145791626,116 ops/s
# Warmup Iteration   2: 147152261,652 ops/s
# Warmup Iteration   3: 147771816,351 ops/s
# Warmup Iteration   4: 147869569,570 ops/s
# Warmup Iteration   5: 147577497,860 ops/s
Iteration   1: 147836440,198 ops/s
Iteration   2: 147920529,181 ops/s
Iteration   3: 147838124,823 ops/s
Iteration   4: 147540624,896 ops/s
Iteration   5: 147921190,092 ops/s


Result "org.sample.JavaBenchmark.myJavaListMimicOf010":
  147811381,838 ±(99.9%) 604635,171 ops/s [Average]
  (min, avg, max) = (147540624,896, 147811381,838, 147921190,092), stdev = 157021,834
  CI (99.9%): [147206746,667, 148416017,009] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.myJavaListMimicOfVararg010

# Run progress: 80,00% complete, ETA 00:01:40
# Fork: 1 of 1
# Warmup Iteration   1: 110734358,558 ops/s
# Warmup Iteration   2: 111785791,272 ops/s
# Warmup Iteration   3: 111709220,432 ops/s
# Warmup Iteration   4: 111819698,204 ops/s
# Warmup Iteration   5: 111628887,916 ops/s
Iteration   1: 111795469,969 ops/s
Iteration   2: 111737091,039 ops/s
Iteration   3: 111815513,754 ops/s
Iteration   4: 111800406,256 ops/s
Iteration   5: 111509495,913 ops/s


Result "org.sample.JavaBenchmark.myJavaListMimicOfVararg010":
  111731595,386 ±(99.9%) 491675,999 ops/s [Average]
  (min, avg, max) = (111509495,913, 111731595,386, 111815513,754), stdev = 127686,696
  CI (99.9%): [111239919,387, 112223271,385] (assumes normal distribution)


# Run complete. Total time: 00:08:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                  Mode  Cnt          Score         Error  Units
JavaBenchmark.arraysAsList010             thrpt    5  109285349,935 ±  228284,508  ops/s
JavaBenchmark.javaUtilListOf010           thrpt    5  146298112,045 ± 1557606,211  ops/s
JavaBenchmark.kotlinListOfVararg010       thrpt    5  109325671,805 ±  421670,589  ops/s
JavaBenchmark.myJavaListMimicOf010        thrpt    5  147811381,838 ±  604635,171  ops/s
JavaBenchmark.myJavaListMimicOfVararg010  thrpt    5  111731595,386 ±  491675,999  ops/s
