# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_OfVararg_010

# Run progress: 0,00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 110137419,197 ops/s
# Warmup Iteration   2: 111136089,366 ops/s
# Warmup Iteration   3: 111574618,308 ops/s
# Warmup Iteration   4: 111629676,519 ops/s
# Warmup Iteration   5: 111337490,252 ops/s
Iteration   1: 111581210,730 ops/s
Iteration   2: 111509883,707 ops/s
Iteration   3: 111611497,083 ops/s
Iteration   4: 111720822,718 ops/s
Iteration   5: 111740818,747 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_OfVararg_010":
  111632846,597 ±(99.9%) 373530,919 ops/s [Average]
  (min, avg, max) = (111509883,707, 111632846,597, 111740818,747), stdev = 97004,793
  CI (99.9%): [111259315,678, 112006377,516] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_Of_010

# Run progress: 25,00% complete, ETA 00:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 145203792,296 ops/s
# Warmup Iteration   2: 146965340,465 ops/s
# Warmup Iteration   3: 145329219,656 ops/s
# Warmup Iteration   4: 145685274,759 ops/s
# Warmup Iteration   5: 146036538,642 ops/s
Iteration   1: 146842326,342 ops/s
Iteration   2: 146831322,138 ops/s
Iteration   3: 146792031,384 ops/s
Iteration   4: 147000750,372 ops/s
Iteration   5: 146742717,488 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_Of_010":
  146841829,545 ±(99.9%) 373678,847 ops/s [Average]
  (min, avg, max) = (146742717,488, 146841829,545, 147000750,372), stdev = 97043,210
  CI (99.9%): [146468150,698, 147215508,392] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010

# Run progress: 50,00% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 115514480,128 ops/s
# Warmup Iteration   2: 116428929,307 ops/s
# Warmup Iteration   3: 116510802,385 ops/s
# Warmup Iteration   4: 116267966,446 ops/s
# Warmup Iteration   5: 116537613,784 ops/s
Iteration   1: 116472089,204 ops/s
Iteration   2: 116664364,809 ops/s
Iteration   3: 116418624,804 ops/s
Iteration   4: 116391470,491 ops/s
Iteration   5: 116227962,247 ops/s


Result "org.sample.JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010":
  116434902,311 ±(99.9%) 605823,210 ops/s [Average]
  (min, avg, max) = (116227962,247, 116434902,311, 116664364,809), stdev = 157330,364
  CI (99.9%): [115829079,101, 117040725,521] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.10, OpenJDK 64-Bit Server VM, 17.0.10+7-LTS
# VM invoker: /Users/Nikita.Bobko/.sdkman/candidates/java/17.0.10-amzn/bin/java
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.JavaBenchmark.java_util_List_of_010

# Run progress: 75,00% complete, ETA 00:01:40
# Fork: 1 of 1
# Warmup Iteration   1: 145336488,677 ops/s
# Warmup Iteration   2: 147340860,182 ops/s
# Warmup Iteration   3: 146769802,919 ops/s
# Warmup Iteration   4: 146555886,456 ops/s
# Warmup Iteration   5: 146678408,960 ops/s
Iteration   1: 146536252,964 ops/s
Iteration   2: 146566653,318 ops/s
Iteration   3: 146459437,559 ops/s
Iteration   4: 146995064,278 ops/s
Iteration   5: 146760046,878 ops/s


Result "org.sample.JavaBenchmark.java_util_List_of_010":
  146663490,999 ±(99.9%) 831393,032 ops/s [Average]
  (min, avg, max) = (146459437,559, 146663490,999, 146995064,278), stdev = 215910,130
  CI (99.9%): [145832097,967, 147494884,032] (assumes normal distribution)


# Run complete. Total time: 00:06:40

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                Mode  Cnt          Score        Error  Units
JavaBenchmark.MyJavaListMimic_Of_010                    thrpt    5  146841829,545 ± 373678,847  ops/s
JavaBenchmark.java_util_List_of_010                     thrpt    5  146663490,999 ± 831393,032  ops/s
JavaBenchmark.MyJavaListMimic_listFromTrustedArray_010  thrpt    5  116434902,311 ± 605823,210  ops/s
JavaBenchmark.MyJavaListMimic_OfVararg_010              thrpt    5  111632846,597 ± 373530,919  ops/s
